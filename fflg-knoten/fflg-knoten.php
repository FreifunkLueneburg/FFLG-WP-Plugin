<?php
  /*
    Plugin Name: Freifunk Lueneburg Knoten Online
    Plugin URI: http://URI_Of_Page_Describing_Plugin_and_Updates
    Description: Zeigt an wie viele Knoten gerade online sind
    Version: 0.1
    Author: Arnim
    Author URI: http://URI_Of_The_Plugin_Author
    License: GPL
  */

// http://codex.wordpress.org/Adding_Administration_Menus

/** Step 2 (from text above). */
add_action( 'admin_menu', 'fflg_plugin_menu' );

/** Step 1. */
function fflg_plugin_menu() {
  add_options_page( 'FFLG Plugin Options', 'FFLG Plugin', 'manage_options', 'fflg-identifier', 'fflg_plugin_options' );
}
   
  /** Step 3. */
function fflg_plugin_options() {
  if ( !current_user_can( 'manage_options' ) )  {
    wp_die( __( 'You do not have sufficient permissions to access this page.' ) );
  }
  
  $opt_name = 'fflg_json'; // war mt_favorite_color
  $hidden_field_name = 'mt_submit_hidden';
  $data_field_name = 'fflg_json'; //war mt_favorite_color

  // Read in existing option value from database
  $opt_val = get_option( $opt_name );

  // See if the user has posted us some information
  // If they did, this hidden field will be set to 'Y'
  if( isset($_POST[ $hidden_field_name ]) && $_POST[ $hidden_field_name ] == 'Y' ) {
      // Read their posted value
      $opt_val = $_POST[ $data_field_name ];

      // Save the posted value in the database
      update_option( $opt_name, $opt_val );

      // Put an settings updated message on the screen

?>
<div class="updated"><p><strong><?php _e('settings saved.', 'menu-test' ); ?></strong></p></div>
<?php

   }
    // Now display the settings editing screen
    echo '<div class="wrap">';
    // header
    echo "<h2>" . __( 'FFLG Knoten Online Plugin Settings', 'menu-test' ) . "</h2>";
    // settings form
    
?>

<form name="form1" method="post" action="">
<input type="hidden" name="<?php echo $hidden_field_name; ?>" value="Y">

<p><?php _e("Path to json file generated generated by mesh_staus.pl (default /tmp/mesh.fflg):", 'menu-test' ); ?> 
<input type="text" name="<?php echo $data_field_name; ?>" value="<?php 
  if (empty($opt_val)) {
    echo "/tmp/mesh_status.tmp";
  } else {
    echo $opt_val;
  } ?>" size="20">
</p><hr />

<p class="submit">
<input type="submit" name="Submit" class="button-primary" value="<?php esc_attr_e('Save Changes') ?>" />
</p>

</form>
</div>

<?
}



class FFNodesWidget extends WP_Widget
{


  
  function FFNodesWidget()
  {
    $widget_ops = array('classname' => 'FFNodesWidget', 'description' => 'Displays number of online Freifunk nodes' );
    $this->WP_Widget('FFNodesWidget', 'FFNodes online', $widget_ops);
  }
 
  function form($instance)
  {
    $instance = wp_parse_args( (array) $instance, array( 'title' => '' ) );
    $title = $instance['title'];
    echo "<p><label for='", $this->get_field_id('title'), "'>Title: <input class='widefat' id=", $this->get_field_id('title'), "' name='", $this->get_field_name('title'), "' type='text' value='", attribute_escape($title), "' /></label></p>";
  }

  function update($new_instance, $old_instance)
  {
    $instance = $old_instance;
    $instance['title'] = $new_instance['title'];
    return $instance;
  }

 
  function widget($args, $instance)
  {
  
  $mesh_file = get_option( "fflg_json", "/tmp/mesh.fflg" );

    function ff_knoten_online() {	
      $mesh_file = get_option( "fflg_json", "/tmp/mesh.fflg" );
      exec("grep \"Total\" $mesh_file |cut -d \":\" -f 2,3", $result);
      return $result;
    }
    

    extract($args, EXTR_SKIP);
 
    echo $before_widget;
    $title = empty($instance['title']) ? ' ' : apply_filters('widget_title', $instance['title']);
 
    if (!empty($title))
      echo $before_title . $title . $after_title;;
 
    // WIDGET CODE GOES HERE
    date_default_timezone_set('Europe/Berlin');
    setlocale(LC_TIME, "de_DE");
    $dateizeit = stat($mesh_file);
    $date = strftime("%A, den %d %B %Y %H:%M", $dateizeit['mtime']);
    $bla = preg_split("/:/", ff_knoten_online()[0]);
    echo $bla[0], " Knoten mit ", $bla[1], " Clients online (", $date, " Uhr ): ";
    echo $after_widget;
  }
 
}
add_action( 'widgets_init', create_function('', 'return register_widget("FFNodesWidget");') );


?> 
